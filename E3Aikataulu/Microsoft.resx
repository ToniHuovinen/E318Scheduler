<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>